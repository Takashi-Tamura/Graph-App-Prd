[{"/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/reportWebVitals.ts":"1","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/App.tsx":"2","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Components/Organisms/Top.tsx":"3","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Components/Molecules/Chart.tsx":"4","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Components/Molecules/DisplayRecharts.tsx":"5","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/index.tsx":"6","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Auth/SignIn.tsx":"7","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Auth/Login.tsx":"8","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Components/Templates/Contents.tsx":"9","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Components/Organisms/Footer/Footer.tsx":"10","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Constants/Strings.ts":"11","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Components/Organisms/Footer/style.tsx":"12","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Components/Atoms/FaIcons/FaIconTemplate.tsx":"13","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Redux/Graph/action.ts":"14","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Components/Organisms/Header.tsx":"15","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Redux/Graph/types.ts":"16","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Redux/index.ts":"17","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Redux/Graph/saga.ts":"18","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Redux/reducer.ts":"19","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Redux/saga.ts":"20","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Firebase/base.ts":"21"},{"size":425,"mtime":1607307455468,"results":"22","hashOfConfig":"23"},{"size":795,"mtime":1607334752793,"results":"24","hashOfConfig":"23"},{"size":669,"mtime":1607325355831,"results":"25","hashOfConfig":"23"},{"size":900,"mtime":1607340259668,"results":"26","hashOfConfig":"23"},{"size":2091,"mtime":1607340354164,"results":"27","hashOfConfig":"23"},{"size":500,"mtime":1607307455467,"results":"28","hashOfConfig":"23"},{"size":670,"mtime":1607321241428,"results":"29","hashOfConfig":"23"},{"size":668,"mtime":1607321241427,"results":"30","hashOfConfig":"23"},{"size":299,"mtime":1607321241436,"results":"31","hashOfConfig":"23"},{"size":635,"mtime":1607321241433,"results":"32","hashOfConfig":"23"},{"size":469,"mtime":1607321241436,"results":"33","hashOfConfig":"23"},{"size":516,"mtime":1607321241433,"results":"34","hashOfConfig":"23"},{"size":346,"mtime":1607321241432,"results":"35","hashOfConfig":"23"},{"size":483,"mtime":1607332683971,"results":"36","hashOfConfig":"23"},{"size":1051,"mtime":1607321241434,"results":"37","hashOfConfig":"23"},{"size":365,"mtime":1607330302675,"results":"38","hashOfConfig":"23"},{"size":515,"mtime":1607339458920,"results":"39","hashOfConfig":"23"},{"size":1174,"mtime":1607339783166,"results":"40","hashOfConfig":"23"},{"size":271,"mtime":1607339806678,"results":"41","hashOfConfig":"23"},{"size":154,"mtime":1607334596429,"results":"42","hashOfConfig":"23"},{"size":620,"mtime":1607333944667,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3dwq1b",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/reportWebVitals.ts",[],"/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/App.tsx",[],"/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Components/Organisms/Top.tsx",[],["91","92"],"/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Components/Molecules/Chart.tsx",["93"],"/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Components/Molecules/DisplayRecharts.tsx",["94"],"import React, { useState } from \"react\";\nimport Chart from \"./Chart\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { messages } from \"../../Constants/Strings\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GraphActions } from \"../../Redux/Graph/action\";\nimport { CombineReducerType } from \"../../Redux/reducer\";\n\nconst useStyles = makeStyles((theme: Theme) => \n  createStyles({\n    formControl: {\n      // margin: theme.spacing(1),\n      minWidth: 200,\n    },\n    selectEmpty: {\n      // marginTop: theme.spacing(2),\n    },\n  }),\n);\n\nconst DisplayRecharts: React.FC = () => {\n  const dispatch = useDispatch();\n  const [country, setCountry] = useState<string>('');\n  const selectedModel = useSelector((state: CombineReducerType) => state.country.selectedCountryData)\n \n  const changeHandler = (e: any) => {\n    setCountry(e.target.value)\n    dispatch(GraphActions.SelectCountry(e.target.value))\n  }\n\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <div>\n        <FormControl className={classes.formControl}>\n          <InputLabel\n            id=\"demo-simple-select-label\">\n            {messages.Pagetop.select}\n          </InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={country}\n            onChange={changeHandler}\n            name=\"selectlink\"\n          >\n            <MenuItem value=\"\">地域を選択する</MenuItem>\n            <MenuItem value=\"Japan\">Japan</MenuItem>\n            <MenuItem value=\" China\">China</MenuItem>\n          </Select>\n\n          <Chart model={selectedModel}/>\n\n          <button>\n            <span>グラフを一覧へ追加</span>\n          </button>\n        </FormControl>\n      </div>\n    </div>\n  )\n}\n\nexport default DisplayRecharts;","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/index.tsx",[],"/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Auth/SignIn.tsx",[],"/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Auth/Login.tsx",[],"/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Components/Templates/Contents.tsx",[],"/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Components/Organisms/Footer/Footer.tsx",["95"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport * as S from \"./style\";\nimport { messages } from \"../../../Constants/Strings\";\nimport FaIconTemplate from \"../../Atoms/FaIcons/FaIconTemplate\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\n\nconst Footer: React.FC = () => {\n  return (\n    <S.Layout>\n      <S.StyledCopy>\n        &copy;{messages.copyRight}\n      </S.StyledCopy>\n\n      <S.StyledIcon\n        href=\"https://twitter.com/@20_tamura_t\"\n        target=\"_blank\"\n      >\n        <FaIconTemplate iconName={faTwitter}/>\n      </S.StyledIcon>\n    </S.Layout>\n  )\n}\n\nexport default Footer;\n","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Constants/Strings.ts",[],"/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Components/Organisms/Footer/style.tsx",[],"/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Components/Atoms/FaIcons/FaIconTemplate.tsx",[],"/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Redux/Graph/action.ts",[],"/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Components/Organisms/Header.tsx",["96"],"import React from \"react\";\nimport { \n  createStyles,\n  makeStyles,\n  Theme } from \"@material-ui/core/styles\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport AppBarMenu from \"../Atoms/AppBarMenu\";\nimport { aboutTxt } from \"../../Constants/Strings\";\nimport styled from \"styled-components\";\nimport Toolbar from '@material-ui/core/Toolbar';\n\nconst useStyles = makeStyles((theme: Theme) => \n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nconst ButtonAppBar = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            <TitleLayout>{aboutTxt.appName}</TitleLayout>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n};\n\nconst TitleLayout = styled.span`\n  padding: 8px;\n`;\n\nexport default ButtonAppBar;","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Redux/Graph/types.ts",[],"/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Redux/index.ts",[],"/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Redux/Graph/saga.ts",["97","98"],"import { takeEvery, put, call, select } from \"redux-saga/effects\";\nimport { SELECTCOUNTRY } from \"./types\";\nimport { GraphActionType, GraphActions } from \"./action\";\nimport { db, } from \"../../Firebase/base\";\nimport { CombineReducerType } from \"../reducer\";\n\n// type FirebaseDoc = firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>\n\nfunction* graphSaga() {\n  yield takeEvery(SELECTCOUNTRY, calcSelectCountry);\n}\n\n/**\n * Firestoreと通信して地域のデータを取得する関数\n */\nfunction* calcSelectCountry(action: GraphActionType) {\n  console.log(action)\n  // @ts-ignore: Unrechable code error\n  const country = action.payload.country\n  console.log(country)\n  const snapshot = yield call(fetch, country);\n  const response = snapshot.docs.map((doc: any ) => doc.data())\n\n  // Updateアクションを発行\n  yield put(GraphActions.SelectUpdate(country, response));\n}\n\n/**\n *  Firestoreからのデータ取得はラップ必要\n */\nconst fetch = async (country: string) => {\n  const colRef = db.collection(\"graphs\").where(\"Country\", \"==\", country).orderBy(\"Year\")\n  const data = await colRef.get()\n  return data\n};\n\nexport default graphSaga;","/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Redux/reducer.ts",[],"/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Redux/saga.ts",[],"/Users/takashi.tamura/Takashi-Tamura-Portfolio/graph-app-prd/src/Firebase/base.ts",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":12,"column":9,"nodeType":"105","messageId":"106","endLine":12,"endColumn":17},{"ruleId":"103","severity":1,"message":"107","line":9,"column":10,"nodeType":"105","messageId":"106","endLine":9,"endColumn":16},{"ruleId":"103","severity":1,"message":"108","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},{"ruleId":"103","severity":1,"message":"109","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":18},{"ruleId":"103","severity":1,"message":"110","line":1,"column":32,"nodeType":"105","messageId":"106","endLine":1,"endColumn":38},{"ruleId":"103","severity":1,"message":"111","line":5,"column":10,"nodeType":"105","messageId":"106","endLine":5,"endColumn":28},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"@typescript-eslint/no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","'styled' is defined but never used.","'AppBarMenu' is defined but never used.","'select' is defined but never used.","'CombineReducerType' is defined but never used.","no-global-assign","no-unsafe-negation"]